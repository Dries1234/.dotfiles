local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
    vim.fn.system({
        "git",
        "clone",
        "--filter=blob:none",
        "--single-branch",
        "https://github.com/folke/lazy.nvim.git",
        lazypath,
    })
end
vim.opt.runtimepath:prepend(lazypath)
require("lazy").setup("dodo.plugins",{
 install = { colorscheme = { "gruvbox"} },
 performance = {
   rtp = {
     disabled_plugins = {
     },
   },
 },
})
-- local fn = vim.fn
--
-- -- Automatically install packer
-- local install_path = fn.stdpath("data") .. "/site/pack/packer/start/packer.nvim"
-- if fn.empty(fn.glob(install_path)) > 0 then
--     PACKER_BOOTSTRAP = fn.system {
--         "git",
--         "clone",
--         "--depth",
--         "1",
--         "https://github.com/wbthomason/packer.nvim",
--         install_path,
--     }
--     print "Installing packer close and reopen Neovim..."
--     vim.cmd [[packadd packer.nvim]]
-- end
--
--
-- -- Use a protected call so we don't error out on first use
-- local status_ok, packer = pcall(require, "packer")
-- if not status_ok then
--     return
-- end
--
-- -- Have packer use a popup window
-- packer.init {
--     display = {
--         open_fn = function()
--             return require("packer.util").float { border = "rounded" }
--         end,
--     },
-- }
--
-- return require('packer').startup(function(use)
--     -- dashboard
--     use {
--         'goolord/alpha-nvim',
--         config = function()
--             require 'alpha'.setup(require 'alpha.themes.dashboard'.config)
--         end
--     }
--     -- packer itself. https://github.com/wbthomason/packer.nvim/issues/718#issuecomment-1001631163
--     use { "wbthomason/packer.nvim" }
--
--
--     -- Themes
--     use 'gruvbox-community/gruvbox'
--
--     -- Misc
--     use 'norcalli/nvim-colorizer.lua'
--
--     -- Status line
--     use {
--         'nvim-lualine/lualine.nvim',
--         requires = { 'kyazdani42/nvim-web-devicons' }
--     }
--     -- cursorline
--     use {
--         'yamatsum/nvim-cursorline'
--     }
--
--     -- Discord
--     use 'andweeb/presence.nvim'
--
--     -- cmp plugins
--     use "hrsh7th/cmp-cmdline" -- cmdline completions
--
--     -- LSP
--     use {
--         'VonHeikemen/lsp-zero.nvim',
--         requires = {
--             -- LSP Support
--             { 'neovim/nvim-lspconfig' },
--             { 'williamboman/mason.nvim' },
--             { 'williamboman/mason-lspconfig.nvim' },
--
--             -- Autocompletion
--             { 'hrsh7th/nvim-cmp' },
--             { 'hrsh7th/cmp-buffer' },
--             { 'hrsh7th/cmp-path' },
--             { 'saadparwaiz1/cmp_luasnip' },
--             { 'hrsh7th/cmp-nvim-lsp' },
--             { 'hrsh7th/cmp-nvim-lua' },
--
--             -- Snippets
--             { 'L3MON4D3/LuaSnip' },
--             { 'rafamadriz/friendly-snippets' },
--         }
--     }
--     use "onsails/lspkind-nvim"
--     use "hrsh7th/cmp-nvim-lsp-signature-help"
--     use({
--         "https://git.sr.ht/~whynothugo/lsp_lines.nvim",
--         config = function()
--             require("lsp_lines").setup()
--         end,
--     })
--     use({
--         "glepnir/lspsaga.nvim",
--         branch = "main",
--     })
--     use 'simrat39/rust-tools.nvim'
--     use({
--         'weilbith/nvim-code-action-menu',
--         cmd = 'CodeActionMenu',
--     })
--     use {
--         'saecki/crates.nvim',
--         tag = 'v0.2.1',
--         requires = { 'nvim-lua/plenary.nvim' },
--         config = function()
--             require('crates').setup()
--         end,
--     }
--
--
--     --trouble
--     use {
--         "folke/trouble.nvim",
--         requires = "kyazdani42/nvim-web-devicons"
--     }
--     -- Telescope
--     use "nvim-lua/plenary.nvim"
--     use "nvim-lua/popup.nvim"
--
--     --use {'nvim-telescope/telescope-fzf-native.nvim', run = 'make' }
--     use {
--         'nvim-telescope/telescope.nvim',
--         requires = { { 'nvim-lua/plenary.nvim' } }
--     }
--
--     use {
--         'ThePrimeagen/harpoon',
--         requires = {
--             'nvim-lua/plenary.nvim'
--         }
--     }
--
--     --sniprun
--     -- use { 'michaelb/sniprun', run = 'bash ./install.sh' }
--
--     -- Treesitter
--     use {
--         'nvim-treesitter/nvim-treesitter',
--         run = ':TSUpdate'
--     }
--     use "p00f/nvim-ts-rainbow"
--     use 'nvim-treesitter/nvim-treesitter-context'
--
--     use {
--         'numToStr/Comment.nvim',
--         config = function()
--             require('Comment').setup()
--         end
--     }
--
--     --file tree [neotree]
--     use {
--         "nvim-neo-tree/neo-tree.nvim",
--         branch = "v2.x",
--         requires = {
--             "nvim-lua/plenary.nvim",
--             "kyazdani42/nvim-web-devicons", -- not strictly required, but recommended
--             "MunifTanjim/nui.nvim"
--         }
--     }
--
--     -- Autopairs
--     use {
--         "windwp/nvim-autopairs",
--         config = function() require("nvim-autopairs").setup {
--                 check_ts = true,
--             }
--         end
--     }
--
--
--     -- git
--     use { 'TimUntersberger/neogit', requires = 'nvim-lua/plenary.nvim' }
--     use {
--         'lewis6991/gitsigns.nvim',
--         config = function()
--             require('gitsigns').setup()
--         end
--     }
--     use { 'akinsho/git-conflict.nvim' }
--
--     --surround
--     use({
--         "kylechui/nvim-surround",
--         config = function()
--             require("nvim-surround").setup({
--                 -- Configuration here, or leave empty to use defaults
--             })
--         end
--     })
--     --markdown
--     -- install without yarn or npm
--     use({
--         "iamcco/markdown-preview.nvim",
--         run = function() vim.fn["mkdp#util#install"]() end,
--     })
--
--     use 'ekickx/clipboard-image.nvim'
--
--     -- noice
--     use({
--         "folke/noice.nvim",
--         event = "VimEnter",
--         module = "noice",
--         requires = {
--             -- if you lazy-load any plugin below, make sure to add proper `module="..."` entries
--             "MunifTanjim/nui.nvim",
--             "rcarriga/nvim-notify",
--         }
--     })
--
--     -- null-ls
--     use({
--         "jose-elias-alvarez/null-ls.nvim",
--         requires = { "nvim-lua/plenary.nvim" },
--     })
--
--     -- fold preview
--     use { 'anuvyklack/fold-preview.nvim',
--         requires = 'anuvyklack/keymap-amend.nvim',
--         config = function()
--             require('fold-preview').setup()
--         end
--     }
--
--
--     --twilight
--     --
--     use {
--         "folke/twilight.nvim",
--     }
--     -- use "tpope/vim-fugitive"
--     --use "saadparwaiz1/cmp_luasnip" -- snippet completions
--     --use { 'tzachar/cmp-tabnine', run = './install.sh', requires = 'hrsh7th/nvim-cmp' }
-- end)
